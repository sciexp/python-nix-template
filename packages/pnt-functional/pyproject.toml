[project]
authors = [
  { name = "Your Name", email = "your.email@example.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "beartype>=0.19.0,<0.20.0",
  "expression>=5.5.0",
]
description = "A Python package template using Nix and uv"
license = { text = "Apache-2.0" }
name = "pnt-functional"
readme = "README.md"
requires-python = ">=3.11,<3.13"
version = "0.1.0"

[project.scripts]
pnt-functional = "pnt_functional.main:greet"

[build-system]
build-backend = "hatchling.build"
requires      = ["hatchling"]

[project.optional-dependencies]

[dependency-groups]
dev = [
  { include-group = "interactive" },
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "types" },
]
interactive = [
  "ipython>=8.32.0",
]
lint = [
  "ruff>=0.9.4",
]
test = [
  "hypothesis>=6.125.1",
  "pytest-cov>=6.0.0",
  "pytest>=8.3.4",
  "xdoctest>=1.2.0",
]
types = [
  "pyright>=1.1.395",
]

[tool.uv]
default-groups = ["lint", "test", "types"]

[tool.pixi.project]
channels  = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]
preview   = ["pixi-build"]

[tool.pixi.dependencies]
beartype   = ">=0.19.0,<0.20.0"
expression = ">=5.5.0"
python     = ">=3.11"

[tool.pixi.pypi-dependencies]
pnt-functional = { path = ".", editable = true }

[tool.pixi.environments]
default     = { solve-group = "default" }
dev         = { features = ["dev"], solve-group = "default" }
interactive = { features = ["interactive"], solve-group = "default" }
lint        = { features = ["lint"], solve-group = "default" }
test        = { features = ["test"], solve-group = "default" }
types       = { features = ["types"], solve-group = "default" }

[tool.pixi.feature.test.tasks]
test = "pytest"

[tool.pixi.feature.lint.tasks]
lint       = "ruff check --fix src/"
lint-check = "ruff check src/"

[tool.pixi.feature.types.tasks]
types = "pyright src/"

[tool.pixi.package]
name    = "pnt-functional"
version = "0.1.0"

[tool.pixi.package.run-dependencies]
beartype   = ">=0.19.0,<0.20.0"
expression = ">=5.5.0"

[tool.pixi.package.host-dependencies]
hatchling = "*"

[tool.pixi.package.build]
backend = { name = "pixi-build-python", version = "0.1.*" }
channels = [
  "https://prefix.dev/conda-forge",
  "https://prefix.dev/pixi-build-backends",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pnt_functional"]

[tool.pytest.ini_options]
addopts = """
-rA
--xdoctest
--disable-warnings
--cov=src/pnt_functional/
--cov-report=term-missing
--durations=0
"""
log_level = "INFO"
testpaths = [
  "src/pnt_functional/tests",
]

[tool.coverage.run]
omit = [
  "src/pnt_functional/tests/*",
]

[tool.ruff]
line-length    = 88
src            = ["src"]
target-version = "py311"

[tool.ruff.lint]
select = [
  "B", # flake8-bugbear
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "W", # pycodestyle warnings
]
