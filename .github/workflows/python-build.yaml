name: Python Build

on:
  workflow_dispatch:
    inputs:
      package-path:
        description: "Path to the package directory"
        required: true
        type: string
      package-name:
        description: "Name of the package"
        required: true
        type: string
      python-version:
        description: "Python version to use"
        required: true
        type: string
        default: "3.12"
      debug-enabled:
        description: "Run with tmate.io debugging enabled"
        required: false
        type: boolean
        default: false
      apply-monorepo-patch:
        description: "Apply monorepo patch before building"
        required: false
        type: boolean
        default: false

  workflow_call:
    inputs:
      package-path:
        description: "Path to the package directory"
        required: true
        type: string
      package-name:
        description: "Name of the package"
        required: true
        type: string
      python-version:
        description: "Python version to use"
        required: true
        type: string
      debug-enabled:
        description: "Run with tmate.io debugging enabled"
        required: false
        type: string
        default: "false"
      apply-monorepo-patch:
        description: "Apply monorepo patch before building"
        required: false
        type: string
        default: "false"
      checkout-ref:
        description: "Git ref to checkout"
        required: false
        type: string
        default: ""
      git-tag:
        description: "Git tag for the release"
        required: false
        type: string
        default: ""

    outputs:
      artifact-name:
        description: "Name of the uploaded artifact"
        value: ${{ jobs.build.outputs.artifact-name }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.set-outputs.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          ref: ${{ inputs.checkout-ref != '' && inputs.checkout-ref || github.ref }}
          fetch-depth: 0

      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3
        if: ${{ inputs.debug-enabled == 'true' }}

      - name: Apply monorepo patch
        if: ${{ inputs.apply-monorepo-patch == 'true' }}
        run: git apply scripts/monorepo_pyproject.patch

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ inputs.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: "0.6.4"

      - name: Build package
        run: |
          cd ${{ inputs.package-path }}
          uv build

      - name: Set outputs
        id: set-outputs
        run: |
          ARTIFACT_NAME="${{ inputs.package-name }}-${{ github.run_id }}"
          echo "artifact-name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: ${{ steps.set-outputs.outputs.artifact-name }}
          path: ${{ inputs.package-path }}/dist/*.{whl,tar.gz}

      - name: Minimize uv cache
        run: uv cache prune --ci
        if: always()
