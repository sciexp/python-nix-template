name: Build Nix Images

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: true
        type: boolean
        default: false
      version:
        description: "Version to tag images with"
        required: true
        type: string
      images:
        description: "JSON array of images to build"
        required: true
        type: string
      branch:
        description: "Branch to checkout"
        required: true
        type: string

  workflow_call:
    inputs:
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: true
        type: string
      version:
        description: "Version to tag images with"
        required: true
        type: string
      images:
        description: "JSON array of images to build"
        required: true
        type: string
      branch:
        description: "Branch to checkout"
        required: true
        type: string

jobs:
  build-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(inputs.images) }}
      fail-fast: false

    steps:
      # https://github.com/easimon/maximize-build-space/blob/v10/action.yml#L121-L137
      - name: Maximize build space
        run: |
          echo "Available storage before removing unused software:"
          sudo df -h
          echo
          sudo rm -rf /usr/local/lib/android
          echo "Available storage after removing android:"
          sudo df -h
          echo
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          echo "Available storage after removing codeql:"
          sudo df -h
          echo

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -yq zstd
          sudo apt-get clean

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled == 'true' }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@786fff0690178f1234e4e1fe9b536e94f5433196 # ratchet:DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: "system-features = nixos-test benchmark big-parallel kvm"
      # - name: Install Nix
      #   uses: nixbuild/nix-quick-install-action@v33
      #   with:
      #     nix_conf: "system-features = nixos-test benchmark big-parallel kvm"
      - name: Setup remote cache
        # TODO: disable continue-on-error https://www.github.com/cachix/cachix-action/issues/200
        uses: cachix/cachix-action@ee79db531bfb851a7cf47035057b7cca88d26449 # ratchet:cachix/cachix-action@master
        continue-on-error: true
        with:
          name: "${{ vars.CACHIX_CACHE_NAME }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          extraPullNames: nix-community,pyproject-nix,sciexp,srid

      - name: Build ${{ matrix.image }} image
        uses: ./.github/actions/build-nix-image
        with:
          triggerEventName: "workflow_dispatch"
          imageName: "${{ matrix.image }}"
          imageFQN: "ghcr.io/sciexp/${{ matrix.image }}"
          nixCommand: "nix run .#${{ matrix.image }}Manifest --impure --accept-flake-config --print-build-logs --show-trace"
          releaseVersion: "${{ inputs.version }}"
          cachixCacheName: ${{ vars.CACHIX_CACHE_NAME }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
