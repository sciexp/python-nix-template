name: Package Release

on:
  workflow_dispatch:
    inputs:
      package-path:
        description: "Path to the package directory"
        required: true
        type: string
      package-name:
        description: "Name of the package"
        required: true
        type: string
      version:
        description: "Version to release"
        required: true
        type: string
      checkout-ref:
        description: "Git ref to checkout"
        required: true
        type: string
      run-if-changed-only:
        description: "Run only if this package has changed"
        required: false
        type: boolean
        default: false
      release-dry-run:
        description: "Whether to run the release in dry-run mode"
        required: false
        type: boolean
        default: false
      debug-enabled:
        description: "Enable tmate debug session"
        required: false
        type: boolean
        default: false

  workflow_call:
    inputs:
      package-path:
        description: "Path to the package directory"
        required: true
        type: string
      package-name:
        description: "Name of the package"
        required: true
        type: string
      version:
        description: "Version to release"
        required: true
        type: string
      checkout-ref:
        description: "Git ref to checkout"
        required: true
        type: string
      run-if-changed-only:
        description: "Run only if this package has changed"
        required: false
        type: string
        default: "false"
      release-dry-run:
        description: "Whether to run the release in dry-run mode"
        required: false
        type: string
        default: "false"
      debug-enabled:
        description: "Enable tmate debug session"
        required: false
        type: boolean
        default: false

    outputs:
      artifact-name:
        description: "Name of the uploaded artifact"
        value: ${{ jobs.release.outputs.artifact-name }}
      version:
        description: "Released version"
        value: ${{ jobs.release.outputs.version }}
      released:
        description: "Whether a new release was published"
        value: ${{ jobs.release.outputs.released }}
      tag:
        description: "Git tag created for the release"
        value: ${{ jobs.release.outputs.tag }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      artifact-name: ${{ steps.set-outputs.outputs.artifact-name }}
      version: ${{ steps.semantic-release.outputs.new_release_version || inputs.version }}
      released: ${{ steps.semantic-release.outputs.new_release_published || 'false' }}
      tag: ${{ steps.semantic-release.outputs.new_release_git_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkout-ref }}
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: "0.6.4"

      - name: Setup Yarn
        uses: threeal/setup-yarn-action@v2.0.0
        with:
          version: "4.6.0"
          cache: true

      - name: Install npm dependencies
        if: ${{ inputs.release-dry-run == 'true' }}
        run: |
          yarn workspace ${{ inputs.package-name }} install
          git log --oneline --branches --tags

      - name: Test semantic-release
        if: ${{ inputs.release-dry-run == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          unset GITHUB_ACTIONS
          yarn workspace ${{ inputs.package-name }} test-release -b ${{ inputs.checkout-ref }}

      - name: Run semantic-release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          working_directory: ${{ inputs.package-path }}
          dry_run: ${{ inputs.release-dry-run == 'true' }}
          semantic_version: 24
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            semantic-release-major-tag
            conventional-changelog-conventionalcommits
          ci: ${{ inputs.release-dry-run == 'false' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTIONS: ${{ inputs.release-dry-run == 'false' }}

      - name: Set outputs
        id: set-outputs
        run: |
          ARTIFACT_NAME="${{ inputs.package-name }}-${{ github.run_id }}"
          echo "artifact-name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

          # Log release information
          if [ "${{ steps.semantic-release.outputs.new_release_published }}" == "true" ]; then
            echo "üì¶ Package ${{ inputs.package-name }} released version ${{ steps.semantic-release.outputs.new_release_version }}"
            echo "üè∑Ô∏è Tag: ${{ steps.semantic-release.outputs.new_release_git_tag }}"
          else
            echo "‚ÑπÔ∏è No release needed for ${{ inputs.package-name }}"
          fi

      - name: Build package
        if: ${{ steps.semantic-release.outputs.new_release_published == 'true' || inputs.release-dry-run == 'true' }}
        run: |
          cd ${{ inputs.package-path }}
          uv build

      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3
        if: ${{ inputs.debug-enabled }}

      - name: Upload artifacts
        if: ${{ steps.semantic-release.outputs.new_release_published == 'true' || inputs.release-dry-run == 'true' }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: ${{ steps.set-outputs.outputs.artifact-name }}
          path: dist

      - name: Publish to PyPI
        if: ${{ steps.semantic-release.outputs.new_release_published == 'true' && inputs.release-dry-run != 'true' }}
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # ratchet:pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist

      - name: Minimize uv cache
        run: uv cache prune --ci
        if: always()
