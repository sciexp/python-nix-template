name: Python Test

on:
  workflow_dispatch:
    inputs:
      python-version:
        description: "Python version to use"
        required: true
        type: string
        default: "3.12"
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: false
        type: boolean
        default: false
      monorepo:
        description: "Test in monorepo mode"
        required: false
        type: boolean
        default: false

  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        required: true
        type: string
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: false
        type: string
        default: "false"
      monorepo:
        description: "Test in monorepo mode"
        required: false
        type: string
        default: "false"
      checkout_ref:
        description: "Git ref to checkout"
        required: false
        type: string
        default: ""

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref != '' && inputs.checkout_ref || github.ref }}

      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled == 'true' }}

      - name: Apply monorepo patch
        if: ${{ inputs.monorepo == 'true' }}
        run: git apply scripts/monorepo_pyproject.patch

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ inputs.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: "0.6.4"

      - name: Run tests
        run: |
          uv sync --all-extras --dev
          uv run pytest

      - name: Minimize uv cache
        run: uv cache prune --ci
        if: always()
