name: Deploy docs to Cloudflare

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: true
        type: string
        default: "false"
      branch:
        description: "Git branch or ref to checkout"
        required: true
        type: string
  workflow_call:
    inputs:
      debug_enabled:
        description: "Run with tmate.io debugging enabled"
        required: true
        type: string
        default: "false"
      branch:
        description: "Git branch or ref to checkout"
        required: true
        type: string

defaults:
  run:
    shell: bash

permissions:
  contents: read
  deployments: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/easimon/maximize-build-space/blob/v10/action.yml#L121-L137
      - name: Maximize build space
        run: |
          echo "Available storage before removing unused software:"
          sudo df -h
          echo
          sudo rm -rf /usr/local/lib/android
          echo "Available storage after removing android:"
          sudo df -h
          echo
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          echo "Available storage after removing codeql:"
          sudo df -h
          echo

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4.2.2
        with:
          ref: ${{ inputs.branch }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # ratchet:DeterminateSystems/nix-installer-action@v16

      - name: Setup remote cache
        # TODO: disable continue-on-error https://www.github.com/cachix/cachix-action/issues/200
        uses: cachix/cachix-action@41f25c0d23388f1a854cc67abb62029877468386 # ratchet:cachix/cachix-action@master
        continue-on-error: true
        with:
          name: "${{ vars.CACHIX_CACHE_NAME }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          extraPullNames: nix-community,poetry2nix,celldynamics,pyproject-nix,sciexp

      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled == 'true' }}

      # - name: Enable gdrive
      #   run: |
      #     touch sciexp-sa.json
      #     chmod 600 sciexp-sa.json
      #     echo "$GCP_SERVICE_ACCOUNT" > sciexp-sa.json
      #   shell: bash
      #   env:
      #     GCP_SERVICE_ACCOUNT: ${{secrets.GCP_SERVICE_ACCOUNT}}

      - name: Build docs
        run: |
          df -h
          nix-channel --update
          nix develop --accept-flake-config -c just docs-build
          df -h

      # - name: Clean up credentials
      #   if: always() # Run even if previous steps fail
      #   run: |
      #     [ -f sciexp-sa.json ] && rm sciexp-sa.json
      #   shell: bash

      - name: Upload docs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        with:
          name: docs-site
          path: |
            docs/_site
            wrangler.toml

  deploy-docs:
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Download docs
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # ratchet:actions/download-artifact@v4
        with:
          name: docs-site

      - name: Show file tree
        run: |
          tree --du -alh

      - name: Deploy to Cloudflare
        id: deployment
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # ratchet:cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload --preview-alias b-${{ inputs.branch }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
